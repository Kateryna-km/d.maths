#include <iostream>
using namespace std;

bool trans (int **c, int n, int m)
{
    int i,j,k;
    bool tran=1;
    for (i=0; i<n; i++)
    {
        for (j=0; j<m; j++)
        {
            if (c[i][j]==1)
            {
                for (k=0; k<m; k++)
                    if (c[j][k]==1)
                        if (c[i][k]==1)
                        tran*=1;
                        else tran*=0;
                    else tran*=0;
            }
        }
    }
    return tran;
}


int main() {
    int *v,*e;
    int k;
    int **w, **temp;
    bool cheki=1, chekj=1;

    cout << "Input count of vertices" << endl;
    cin >> k;

    w=(int **)calloc(k, sizeof(int *));
    temp=(int **)calloc(k,sizeof(int *));
    for (int i=0; i<k; i++)
    {
        w[i]=(int *)calloc(k+1, sizeof(int));
        temp[i]=(int *)calloc(k+1, sizeof(int));
    }

    v = (int *)calloc(k, sizeof(int));
    e = (int *)calloc((k-1), sizeof(int));

    cout << "Input weight of edges" << endl;
    for (int i=0; i<k; i++)
    {
        for (int j=0; j<k; j++)
        {
            if (j>i)
            {
                cout << i+1 << " - " << j+1 << " ";
                cin >> w[i][j];
            }
            else w[i][j]=0;
        }
        cout << endl;
    }
int C=k;
int p,q;
int minim=INT_MAX;
    for (int l=0; l<C; l++)
    {
        for (int i=0; i<k; i++)
            for (int j=0; j<k; j++)
            if (w[i][j]<minim && w[i][j]!=0)
            {
                p=i; q=j;
                minim=w[i][j];
            }
        temp[p][q]=1;
        temp[q][p]=1;
        for (int t=0; t<C; t++)
        {
            if (v[t]!=(p+1)) cheki*=1;
            else cheki*=0;
            if (v[t]!=(q+1)) chekj*=1;
            else chekj*=0;
        }
        if ((cheki+chekj)==2)
        {
            e[l]=w[p][q];
            v[l]=p+1;
            l++;
            C++;
            v[l]=q+1;
        }
        else{
        if (cheki==1)
        {v[l]=p+1;    e[l]=w[p][q]; }
        else{
        if (chekj==1)
        {v[l]=q+1;    e[l]=w[p][q]; }
        else{
        if (cheki+chekj==0 && trans(temp,k,k)==0)
        {e[l]=w[p][q];}}}}
        minim=INT_MAX;
        w[p][q]=0;
        cheki=1;
        chekj=1;
    }

    int news=0;
    for (int i=0; i<(C-1); i++)
        if (e[i]!=0 && news<(k-1))
        {
            e[news]=e[i];
            news++;
        }
    cout << "E: { ";
    for (int i=0; i<news; i++)
        cout << e[i] << " ";
    cout << "}\n";

    news=0;
    for (int i=0; i<C; i++)
        if (v[i]!=0)
        {
            v[news]=v[i];
            news++;
        }
    cout << "V: { ";
    for (int i=0; i<(news-1); i++)
        cout << v[i] << " ";
    cout << "}\n";

    return 0;
}
